"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Client =
/**
 * @type {string} Endpoint of the api for this class
 */

/**
 * @type {string} Namespace of the data for this class
 */

/**
 * @param {string|Client} token - Authentication token or parent client.
 * @param {string|undefined} acceptLanguage - Language code to control the response language.
 */
function Client(token) {
  var acceptLanguage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
  (0, _classCallCheck2.default)(this, Client);
  (0, _defineProperty2.default)(this, "config", {
    /**
     * @type {URL} Base url of the api
     */
    url: new URL('https://api.myparcel.nl'),

    /**
     * @type {string} Authentication token
     */
    token: '',

    /**
     * @type {string|undefined} Accept language header
     */
    acceptLanguage: undefined
  });
  (0, _defineProperty2.default)(this, "endpoint", '');
  (0, _defineProperty2.default)(this, "namespace", '');

  if (token instanceof Client) {
    this.config = token.config;
  } else {
    this.config = _objectSpread({}, this.config, {
      token: token,
      acceptLanguage: acceptLanguage
    });
  }
};

exports.default = Client;