"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var create = {
  $schema: 'http://json-schema.org/draft-07/schema#',
  $id: 'collect-trip_create',
  definitions: {},
  type: 'object',
  required: ['data'],
  properties: {
    data: {
      type: 'object',
      required: ['collect_trip'],
      properties: {
        collect_trip: {
          type: 'array',
          items: {
            type: 'object',
            required: ['carrier_id', 'collect_window_start_datetime', 'contact', 'shop_id'],
            additionalProperties: false,
            properties: {
              carrier_id: {
                type: 'integer'
              },
              collect_trip_schedule_id: {
                type: 'integer'
              },
              collect_window_start_datetime: {
                $ref: 'shared#/definitions/date-time'
              },
              contact: {
                type: 'object',
                required: ['cc', 'city', 'email', 'number', 'phone', 'postal_code', 'street'],
                properties: {
                  cc: {
                    type: 'string',
                    minLength: 2,
                    maxLength: 2
                  },
                  city: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  company: {
                    type: 'string',
                    maxLength: 255
                  },
                  email: {
                    type: 'string',
                    format: 'email',
                    maxLength: 255
                  },
                  first_name: {
                    type: 'string',
                    maxLength: 255
                  },
                  gender: {
                    type: 'string',
                    enum: ['mr', 'mrs']
                  },
                  last_name: {
                    type: 'string',
                    maxLength: 255
                  },
                  number: {
                    type: ['integer', 'string'],
                    maxLength: 255,
                    minLength: 1
                  },
                  number_suffix: {
                    type: 'string',
                    maxLength: 255
                  },
                  phone: {
                    type: 'string',
                    minLength: 8,
                    maxLength: 255,
                    pattern: '^[\\s]*((\\+|00)31|0)([\\s-]*[0-9]){9}[\\s]*$'
                  },
                  postal_code: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  street: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  street_additional_info: {
                    type: 'string',
                    maxLength: 255
                  }
                }
              },
              height: {
                type: 'integer',
                mimimum: 1
              },
              length: {
                type: 'integer',
                mimimum: 1
              },
              package_count: {
                type: 'integer',
                multipleOf: 5,
                minimum: 5
              },
              shop_id: {
                type: 'integer'
              },
              status: {
                type: 'string',
                enum: ['new', 'skipped']
              },
              weight: {
                type: 'integer',
                mimimum: 1
              },
              width: {
                type: 'integer',
                mimimum: 1
              },
              volume: {
                type: 'integer',
                minimum: 1
              },
              volume_type: {
                type: 'string',
                enum: ['package', 'mailbag', 'container', 'pallet']
              },
              courier_product_id: {
                type: 'integer'
              }
            }
          }
        }
      }
    }
  }
};
var update = {
  $schema: 'http://json-schema.org/draft-07/schema#',
  $id: 'collect-trip_update',
  definitions: {},
  properties: {
    data: {
      properties: {
        collect_trip: {
          items: {
            additionalProperties: false,
            properties: {
              id: {
                type: 'integer'
              },
              carrier_id: {
                type: 'integer'
              },
              collect_trip_schedule_id: {
                type: 'integer'
              },
              collect_window_start_datetime: {
                $ref: 'shared#/definitions/date-time'
              },
              contact: {
                type: 'object',
                required: ['cc', 'city', 'number', 'postal_code', 'street'],
                properties: {
                  cc: {
                    type: 'string',
                    minLength: 2,
                    maxLength: 2
                  },
                  city: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  company: {
                    type: 'string',
                    maxLength: 255
                  },
                  email: {
                    type: 'string',
                    format: 'email',
                    maxLength: 255
                  },
                  first_name: {
                    type: 'string',
                    maxLength: 255
                  },
                  gender: {
                    type: 'string',
                    enum: ['mr', 'mrs']
                  },
                  last_name: {
                    type: 'string',
                    maxLength: 255
                  },
                  number: {
                    type: ['integer', 'string'],
                    maxLength: 255,
                    minLength: 1
                  },
                  number_suffix: {
                    type: 'string',
                    maxLength: 255
                  },
                  phone: {
                    type: 'string',
                    minLength: 8,
                    maxLength: 255
                  },
                  postal_code: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  street: {
                    type: 'string',
                    maxLength: 255,
                    minLength: 1
                  },
                  street_additional_info: {
                    type: 'string',
                    maxLength: 255
                  }
                }
              },
              height: {
                type: 'integer',
                minimum: 1
              },
              length: {
                type: 'integer',
                minimum: 1
              },
              package_count: {
                type: 'integer',
                multipleOf: 5,
                minimum: 5,
                maximum: 25
              },
              shop_id: {
                type: 'integer'
              },
              status: {
                type: 'string',
                enum: ['updated', 'skipped', 'new']
              },
              weight: {
                type: 'integer',
                minimum: 1
              },
              width: {
                type: 'integer',
                minimum: 1
              },
              volume: {
                type: 'integer',
                minimum: 1
              },
              volume_type: {
                type: 'string',
                enum: ['package', 'mailbag', 'container', 'pallet']
              },
              courier_product_id: {
                type: 'integer'
              }
            },
            type: 'object'
          },
          type: 'array'
        }
      },
      type: 'object'
    }
  },
  type: 'object'
};
var _default = {
  create: create,
  update: update
};
exports.default = _default;