"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _construct2 = _interopRequireDefault(require("@babel/runtime/helpers/construct"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _nodeFetch = _interopRequireWildcard(require("node-fetch"));

var _transform = _interopRequireDefault(require("@teamawesome/transform"));

var _resultSet = _interopRequireDefault(require("../result-set"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = function _default(superclass) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_superclass) {
    (0, _inherits2.default)(Search, _superclass);

    function Search() {
      (0, _classCallCheck2.default)(this, Search);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Search).apply(this, arguments));
    }

    (0, _createClass2.default)(Search, [{
      key: "search",

      /**
       * @type {Pipe}
       */

      /**
       * @param {Object} filters
       */
      value: function search(filters) {
        return this.constructor.search.call(filters, this);
      }
    }]);
    return Search;
  }(superclass), (0, _defineProperty2.default)(_class, "search", new _transform.default(search)), _temp;
};

exports.default = _default;
var search = new _transform.default({
  filters: function filters(_filters) {
    return _objectSpread({
      ids: []
    }, _filters);
  },
  url: function url(filters) {
    var _this$config$url = this.config.url,
        origin = _this$config$url.origin,
        pathname = _this$config$url.pathname;
    var url = new URL("".concat(origin).concat(pathname, "/").concat(this.endpoint, "/").concat(filters.ids.join(';')));

    for (var _i = 0, _Object$entries = Object.entries(filters); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = (0, _slicedToArray2.default)(_Object$entries[_i], 2),
          key = _Object$entries$_i[0],
          value = _Object$entries$_i[1];

      if (key === 'ids') {
        continue;
      }

      url.searchParams.set(key, value);
    }

    return url;
  },
  request: function request(url) {
    var request = {
      headers: {
        accept: 'application/json;charset=utf-8',
        'content-type': 'application/json;charset=utf-8'
      }
    };

    if (this.config.token) {
      request.headers.authorization = "basic ".concat(this.config.token);
    }

    if (this.config.acceptLanguage) {
      request.headers['Accept-Language'] = this.config.acceptLanguage;
    }

    return new _nodeFetch.Request(url, request);
  },
  response: function response(request) {
    return (0, _nodeFetch.default)(request);
  },
  json: function json(response) {
    return response.json().then(function (data) {
      if (response.ok) {
        return data;
      }

      return Promise.reject(data);
    });
  },
  parse: function parse(data) {
    var _data$data = data.data,
        items = _data$data[this.namespace],
        _data$data$results = _data$data.results,
        results = _data$data$results === void 0 ? items.length : _data$data$results;
    var resultSet = (0, _construct2.default)(_resultSet.default, (0, _toConsumableArray2.default)(items));
    resultSet.results = results;
    return resultSet;
  }
});