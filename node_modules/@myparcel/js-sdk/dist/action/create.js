"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _nodeFetch = _interopRequireWildcard(require("node-fetch"));

var _transform = _interopRequireDefault(require("@teamawesome/transform"));

var _validation = require("../validation");

var _default = function _default(schema) {
  var c = new _transform.default(create);

  if (schema) {
    c.insert('clean', function (data) {
      return (0, _validation.clean)(schema, data);
    }, 'structure');
  }

  return function (superclass) {
    var _class, _temp;

    return _temp = _class =
    /*#__PURE__*/
    function (_superclass) {
      (0, _inherits2.default)(Create, _superclass);

      function Create() {
        (0, _classCallCheck2.default)(this, Create);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Create).apply(this, arguments));
      }

      (0, _createClass2.default)(Create, [{
        key: "create",

        /**
         * @type {Pipe}
         */

        /**
         * Create an instance.
         *
         * @param data
         * @return {Promise<*>}
         */
        value: function create(data) {
          return this.constructor.create.call(data, this);
        }
      }]);
      return Create;
    }(superclass), (0, _defineProperty2.default)(_class, "create", c), _temp;
  };
};

exports.default = _default;
var create = new _transform.default({
  structure: function structure(data) {
    return {
      data: (0, _defineProperty2.default)({}, this.namespace, Array.isArray(data) ? data : [data])
    };
  },
  url: function url(data) {
    var _this$config$url = this.config.url,
        origin = _this$config$url.origin,
        pathname = _this$config$url.pathname;
    var url = new URL("".concat(origin).concat(pathname, "/").concat(this.endpoint));
    return {
      url: url,
      data: data
    };
  },
  // Maybe clean
  request: function request(_ref) {
    var url = _ref.url,
        data = _ref.data;
    var request = {
      body: JSON.stringify(data),
      method: 'POST',
      headers: {
        authorization: "basic ".concat(this.config.token),
        accept: 'application/json;charset=utf-8',
        'content-type': 'application/json;charset=utf-8'
      }
    };

    if (this.config.acceptLanguage) {
      request.headers['Accept-Language'] = this.config.acceptLanguage;
    }

    return {
      data: data,
      request: new _nodeFetch.Request(url, request)
    };
  },
  response: function response(_ref2) {
    var data = _ref2.data,
        request = _ref2.request;
    return {
      data: data,
      request: (0, _nodeFetch.default)(request)
    };
  },
  parse: function parse(_ref3) {
    var data = _ref3.data,
        request = _ref3.request;
    var entries = data.data[this.namespace];
    return request.then(function (response) {
      return response.json().then(function (data) {
        if (response.ok) {
          return entries.map(function (entry, index) {
            entry.id = data.data.ids[index].id;
            return entry;
          });
        }

        return Promise.reject(data);
      });
    });
  }
});