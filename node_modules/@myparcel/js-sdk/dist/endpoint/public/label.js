"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Label = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _helpers = require("../../helpers");

var _client = _interopRequireDefault(require("../../client"));

var _search = _interopRequireDefault(require("../../action/search"));

var Label =
/*#__PURE__*/
function (_mixin) {
  (0, _inherits2.default)(Label, _mixin);

  function Label() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Label);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Label)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "namespace", 'pdf');
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "endpoint", 'v2/shipment_labels');
    return _this;
  }

  return Label;
}((0, _helpers.mixin)(_client.default, _search.default));

exports.Label = Label;
Label.search.insert('fixResponse', function fixUrl(data) {
  var url = data.url;
  return [{
    // Resolve the relative url to the api root
    url: this.config.url + url
  }];
}, 'parse'); // Alias because while it works as a search, it is in fact a create

Label.create = Label.search;
Label.prototype.create = Label.prototype.search;
(0, _helpers.addEndpoint)(Label, 'label');